templator - version 1.0.0
--------------------------------------------------------------------------------
This repository provides a simple PHP code library for generating pages from
PHP template files.

Primary authors:

    Roger Gee <roger.gee@tulsalibrary.org>

Other authors:

--------------------------------------------------------------------------------
Dependencies:

    n/a

--------------------------------------------------------------------------------
Installation:

This library is available as a composer package. Require 'tccl/templator'.

--------------------------------------------------------------------------------
Usage:

Templator loads php template files from the include path. First make sure your
include path is available. Alternatively you can load templates relative to the
script directory. Template scripts must have the suffix .php.tpl. If you do not
specify the extension, the library will add it for you.

The base interface \TCCL\Templator\Templator defines the contract for
templators. A basic templator has been provided via
\TCCL\Templator\TemplateGenerator, and an extended version via
\TCCL\Templator\PageGenerator. The 'TemplateGenerator' is a generic version and
the 'PageGenerator' is a specialized version for top-level HTML pages.

  Sample usage:

    $page = new \TCCL\Templator\PageGenerator('login'); // i.e. login.php.tpl
    $page->addVariable('failed',true);
    $html = $page->evaluate();

    echo $page->generate();

Templators of type TemplateGenerator are designed to have nested components
(which are themselves templators). These templators are executed in the context
of a method call, meaning the $this variable always refers to the templator
instance.

Also, the included templator implementations always preevaluate HTML in memory
unless configured otherwise in the constructor. Preevaluation is sometimes
necessary if you need side-effects to propogate to a parent templator; however
it can also consume a lot of memory.

  Example template script using PageGenerator methods:

    <html>
      <head>
        <title><?php print $title;?></title>
      </head>
      <body>
        <?php $this->generateComponent('top-bar');?>
        <div class="core-content">
          <?php $this->generateComponent('content');?>
        </div>
      </body>
    </html>

  Sample code creating such a PageGenerator:

    $page = new \TCCL\Templator\PageGenerator('index',false);
    $page->addVariable('title','The Site');

    $topbar = new \TCCL\Templator\TemplateGenerator('top-bar',false);
    $page->addComponent('top-bar',$topbar);

    $content = new \TCCL\Templator\TemplateGenerator('index-content',false);
    $page->addComponent('content',$content);
